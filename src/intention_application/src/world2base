#!/usr/bin/env python
import rospy

# to get commandline arguments
import sys

# because of transformations
import tf
import numpy as np
import tf2_ros
import geometry_msgs.msg


rotation_matrix=np.load("intention_application/src/handeyecalibration/rotation.npy")
translation=np.load("intention_application/src/handeyecalibration/translation.npy")


#!/usr/bin/env python
import roslib

import rospy
import tf

if __name__ == '__main__':
    rospy.init_node('fixed_tf_broadcaster')
    br = tf.TransformBroadcaster()
    rate = rospy.Rate(10.0)
    while not rospy.is_shutdown():


        br.sendTransform((0,0,0),
                         (0,0,0,1),
                         rospy.Time.now(),
                         "world",
                         "base_link")
                         
        rate.sleep()
